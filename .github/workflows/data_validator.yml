---
name: "data-validator"

on:
  push

jobs:
  data-validator:
    name: "Data Validator"
    runs-on: "self-hosted"
    environment: DATA-VALIDATOR

    # # Service containers to run with `container-job`
    # services:
    #   # Label used to access the service container
    #   postgres:
    #     # Docker Hub image
    #     image: postgres:13.1
    #     # Provide the password for postgres
    #     env:
    #       POSTGRES_USER: ipno
    #       POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #       POSTGRES_DB: ipno
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432

    steps:
      # - uses: actions/checkout@v3
      # - name: Install slack package
      #   run: pip install slack_sdk==3.19.5
      - name: dvc pull
        shell: "bash --noprofile --norc -x -eo pipefail {0}"
        run: |
          find dvc/data/raw -type f | xargs -I{} sed -iE 's/wdir\: ..\/..\/..\/data\/raw/wdir\: \/runner\/_work\/data\/data\/raw/g' {}
          mkdir /runner/_work/data/dvc_cache || true
          dvc cache dir --local /runner/_work/data/dvc_cache
          dvc pull -v -f
      # - name: wrgl pull
      #   run: |
      #     wrgl config set --global user.email "gh-action@publicdata.works"
      #     wrgl config set --global user.name "Github Action"
      #     mkdir /runner/_work/data/.wrgl || true
      #     cp .wrgl/config.yaml /runner/_work/data/.wrgl/
      #     wrgl init --wrgl-dir /runner/_work/data/.wrgl || true
      #     wrgl pull --wrgl-dir /runner/_work/data/.wrgl --all --ignore-non-existent --no-progress
      - name: process data
        run: |
          sed -iE 's/dataDir\: data/dataDir\: \/runner\/_work\/data\/data/g' deba.yaml
          echo "md5Dir: /runner/_work/data/md5" >> deba.yaml
          make WRGL_FLAGS="--wrgl-dir /runner/_work/data/.wrgl" GSUTIL="$(which gsutil)"
        env:
          OCR_ENSURE_COMPLETE: "true"
      - name: list the processed csv
        run: ls /runner/_work/data
      # - name: Connect sqlite
      #   run: python scripts/create_sqlite.py
      # - name: Connect postgres db
      #   run: python data-validator/setup_be_db.py
      #   env:
      #     # The hostname used to communicate with the PostgreSQL service container
      #     POSTGRES_HOST: localhost
      #     # The default PostgreSQL port
      #     POSTGRES_PORT: 5432
      #     POSTGRES_DB: ipno
      #     POSTGRES_USER: ipno
      #     POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #     SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
